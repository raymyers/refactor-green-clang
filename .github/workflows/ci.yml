name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install clang-format
      run: sudo apt-get update && sudo apt-get install -y clang-format

    - name: Check code formatting
      run: |
        find src -name "*.cc" -o -name "*.h" | xargs clang-format --dry-run --Werror || {
          echo "Code formatting issues found. Run 'clang-format -i src/**/*.{cc,h}' to fix."
          exit 1
        }

  build-and-test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        build-type: [Debug, Release]

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang-19 \
          llvm-19-dev \
          libclang-19-dev \
          cmake \
          build-essential

    - name: Set up Clang environment
      run: |
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 100
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-19 100
        sudo update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-19 100

    - name: Create build directory
      run: mkdir build

    - name: Configure CMake
      working-directory: build
      run: cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} ..

    - name: Build
      working-directory: build
      run: make VERBOSE=1

    - name: Run tests
      run: |
        echo "=== Running test suite ==="
        cd build
        make test





    - name: Check binary size and dependencies
      run: |
        echo "=== Binary information ==="
        ls -lh build/bin/clang-tool
        file build/bin/clang-tool
        echo "=== Dependencies ==="
        ldd build/bin/clang-tool | head -10

  compatibility-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu-version: ["20.04", "22.04"]
    
    container:
      image: ubuntu:${{ matrix.ubuntu-version }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y \
          clang \
          llvm-dev \
          libclang-dev \
          cmake \
          build-essential

    - name: Build and test
      run: |
        mkdir build
        cd build
        cmake ..
        make
        make test