---
name: Build

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        clang-version: [18, 19]
        include:
          - os: ubuntu-22.04
            clang-version: 19
            test-examples: true

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget lsb-release software-properties-common gnupg
          
          # Add LLVM repository
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
          sudo add-apt-repository -y "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-${{ matrix.clang-version }} main"
          sudo apt-get update
          
          # Install clang and development tools
          sudo apt-get install -y \
            clang-${{ matrix.clang-version }} \
            llvm-${{ matrix.clang-version }}-dev \
            libclang-${{ matrix.clang-version }}-dev \
            cmake \
            build-essential

      - name: Set up Clang environment
        run: |
          sudo update-alternatives --install /usr/bin/clang clang \
            /usr/bin/clang-${{ matrix.clang-version }} 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ \
            /usr/bin/clang++-${{ matrix.clang-version }} 100
          sudo update-alternatives --install /usr/bin/llvm-config \
            llvm-config /usr/bin/llvm-config-${{ matrix.clang-version }} 100

      - name: Create build directory
        run: mkdir build

      - name: Configure CMake
        working-directory: build
        run: cmake -DCMAKE_BUILD_TYPE=Release ..

      - name: Build
        working-directory: build
        run: make

      - name: Test with examples
        if: matrix.test-examples
        run: |
          ./build/bin/clang-tool examples/simple.cc -- -std=c++11
          echo "Build completed successfully"

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        clang-version: [18, 19]
        include:
          - clang-version: 19
            test-examples: true

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install llvm@${{ matrix.clang-version }} cmake

      - name: Set up Clang environment
        run: |
          echo "/opt/homebrew/opt/llvm@${{ matrix.clang-version }}/bin" \
            >> $GITHUB_PATH
          export LLVM_DIR="/opt/homebrew/opt/llvm@${{ matrix.clang-version }}/lib/cmake/llvm"
          export Clang_DIR="/opt/homebrew/opt/llvm@${{ matrix.clang-version }}/lib/cmake/clang"
          echo "LLVM_DIR=$LLVM_DIR" >> $GITHUB_ENV
          echo "Clang_DIR=$Clang_DIR" >> $GITHUB_ENV

      - name: Create build directory
        run: mkdir build

      - name: Configure CMake
        working-directory: build
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_DIR="$LLVM_DIR" \
            -DClang_DIR="$Clang_DIR" ..

      - name: Build
        working-directory: build
        run: make

      - name: Test with examples
        if: matrix.test-examples
        run: |
          ./build/bin/clang-tool examples/simple.cc -- -std=c++11
          echo "Build completed successfully"

  compatibility-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install minimal dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            llvm-dev \
            libclang-dev \
            cmake \
            build-essential

      - name: Build and test
        run: |
          mkdir build
          cd build
          cmake ..
          make
          make test